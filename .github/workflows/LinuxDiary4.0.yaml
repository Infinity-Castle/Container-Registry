name: Build and Deploy Docker Images
on:
  push:
    branches:
      - main # Replace with your target branch if necessary

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: changed-files
        uses: ahmadnassri/action-changed-files@v1

      - run: |
          dockerfiles=()
          for file in ${{ steps.changed-files.outputs.files }}; do
            if [[ $file == *"Dockerfile" ]]; then
              dockerfiles+=($file)
              echo "$file has changed"
            else
              echo "no file has changed"
            fi
          echo "dockerfiles=${dockerfiles[@]}" >> $GITHUB_ENV
          done 

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Push Docker Images
        run: |
          echo "${dockerfiles}"
          for file in "${dockerfiles}[@]"; do
            echo "$file"
            image_name=$(dirname $file)
            echo "$image_name"
            docker build . -t ghcr.io/infinity-castle/$image_name:latest
            docker push ghcr.io/infinity-castle/$image_name:latest
          done














# name: Build and Deploy Docker Images

# on:
#   push:
#     branches:
#       - main # Replace with your target branch if necessary

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Check for Dockerfiles
#         run: |
#           changed_files=$(git diff --name-only HEAD -- HEAD^)
#           dockerfiles=$(echo "$changed_files" | grep -E 'Dockerfile|dockerfile' || true)
#           if [ -n "$dockerfiles" ]; then
#             echo "Dockerfiles changed: $dockerfiles"
#           else
#             echo "No Dockerfiles changed. ${{toJSON(github.event)}}, $dockerfiles"
#             exit 0
#           fi

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: UtkarshM-hub
#           password: ${{ secrets.PAT }}

#       - name: Build and Push Docker Images
#         run: |
#           for file in $dockerfiles; do
#             image_name=$(dirname $file)
#             docker build -t ghcr.io/Infinity-Castle/1:latest .
#             docker push ghcr.io/Infinity-Castle/1:latest
#           done

# name: linuxdiary-4.0

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   publish-updated:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: utkarshmandape
#           password: ${{ secrets.PAT }}

#       - name: Build updated dockerfiles
#         run: |
#           python ${GITHUB_WORKSPACE}/.github/scripts/linuxdiary-4.0/linuxdiary-4.0.py && ${GITHUB_WORKSPACE}/.github/scripts/linuxdiary-4.0/buildAndUpdate.sh

#       - name: Push hash changes
#         run: |
#           git config --global user.name 'Infinity Castle'
#           git config --global user.email 'utmandape4@gmail.com'
#           git add .
#           set +e
#           git status | grep modified
#           if [ $? -eq 0 ]
#           then
#               set -e
#               git commit -am "Hash Updated - Linux Diary 4.0"
#               git push origin
#           else
#               set -e
#           fi
